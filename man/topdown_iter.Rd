% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/topdown.R
\name{topdown_iter}
\alias{topdown_iter}
\title{Wrapper function for the 3 topdown functions from the discretization package.}
\usage{
topdown_iter(predictors, labels, test = TRUE, validation = TRUE,
  criterion = "gini", param = list(1, 2, 3))
}
\arguments{
\item{predictors}{The matrix array containing the numeric attributes to discretize.}

\item{labels}{The actual labels of the provided predictors (0/1).}

\item{test}{Boolean : True if the algorithm should use predictors to construct a test set on which to search for the best discretization scheme using the provided criterion (default: TRUE).}

\item{validation}{Boolean : True if the algorithm should use predictors to construct a validation set on which to calculate the provided criterion using the best discretization scheme (chosen thanks to the provided criterion on either the test set (if true) or the training set (otherwise)) (default: TRUE).}

\item{criterion}{The criterion ('gini','aic','bic') to use to choose the best discretization scheme among the generated ones (default: 'gini'). Nota Bene: it is best to use 'gini' only when test is set to TRUE and 'aic' or 'bic' when it is not. When using 'aic' or 'bic' with a test set, the likelihood is returned as there is no need to penalize for generalization purposes.}

\item{param}{List providing the methods to test (from 1, 2 and 3, default: list(1,2,3)).}
}
\description{
This function discretizes a training set using the user provided method(s) among the three topdown methods from the discretization package. Depending on the user providing a test and/or a validation set, the function returns the best discretization for logistic regression.
}
\examples{
# Simulation of a discretized logit model
set.seed(1)
x = matrix(runif(300), nrow = 100, ncol = 3)
cuts = seq(0,1,length.out= 4)
xd = apply(x,2, function(col) as.numeric(cut(col,cuts)))
theta = t(matrix(c(0,0,0,2,2,2,-2,-2,-2),ncol=3,nrow=3))
log_odd = rowSums(t(sapply(seq_along(xd[,1]), function(row_id) sapply(seq_along(xd[row_id,]),
function(element) theta[xd[row_id,element],element]))))
y = stats::rbinom(100,1,1/(1+exp(-log_odd)))

topdown_iter(x,y)
}
\keyword{discretization}
\keyword{topdown,}
